#!/usr/bin/env python
import socket
import subprocess
import sys
import argparse
import signal
from datetime import datetime
from multiprocessing import Pool

#The function that actually does the stuff
def scan(arg):
	#This is for ^C when using pool.imap
	signal.signal(signal.SIGINT, signal.SIG_IGN)

	target_ip, port = arg
	sock 			= socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sock.settimeout(2)

	#Try to connect to the port, and return status
	try:
		sock.connect((target_ip, port))
		sock.close()
		return port, True

	except (socket.timeout, socket.error):
		return port, False

if __name__ == '__main__':
	try:
		#Command-line menu
		parser = argparse.ArgumentParser()
		parser.add_argument('hostname', help="Hostname / IP to scan.")
		parser.add_argument('-v', help="Verbose mode.", action='store_true')
		parser.add_argument('-p', help="Number of threads, 10 by default.", type=int)
		parser.add_argument('-n', help="Ports range, 1024 by default.", type=int)
		args = parser.parse_args()

		#Check if the hostname is valid
		target_ip		= socket.gethostbyname(args.hostname)
		num_procs		= args.p if args.p else 10
		pool 			= Pool(processes=num_procs)

	except socket.gaierror:
		sys.exit("Host name doesn't exist.")

	except Exception, e:
		sys.exit("Error: {0}".format(e))

	message = "Currently scanning " + target_ip
	print "=" * len(message)
	print message
	print "=" * len(message)

	t1 					= datetime.now()

	try:
		#If -n is not specified, the range is 1 to 1024
		if args.n:
			ports = range(1, args.n + 1)
		else:
			ports = range(1, 1025)

		#This is the multithreading, it calls scan with every port in the range
		for port, status in pool.imap(scan, [(target_ip, port) for port in ports]):
			if args.v:
				print port, "  OPEN" if status else "CLOSED"
			elif status:
				print port + " OPEN"

	except KeyboardInterrupt:
		pool.terminate()
		pool.join()
		sys.exit("\n\nTerminated by user. Bye !")

	except Exception, e:
		sys.exit("Error: {0}".format(e))

	t2 					= datetime.now()
	print "Scanning complete in", t2 - t1